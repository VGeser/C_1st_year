1)
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
int main(int argc,char *argv[]) {
    if (argc==1){
        fprintf(stderr,"%s","No parameters specified.");
        return 13;
    }
    unsigned char isMod=0;
    long long a,b,c=0;
    int i=1;
    if (!strcmp(argv[1],"-m")){
        isMod=1;
        c=atoi(argv[2]);
        i=3;
    } else if (argc>4 && !strcmp(argv[4],"-m")){
        isMod=1;
        c=atoi(argv[5]);
    }
    a=atoi(argv[i+1]);
    b=atoi(argv[i+2]);
    if (!isMod){
        if (!strcmp(argv[1],"sub")){
            fprintf(stdout,"%lld",a-b);
        }
        if (!strcmp(argv[1],"add")){
            fprintf(stdout,"%lld",a+b);
        }
        if (!strcmp(argv[1],"mul")){
            fprintf(stdout,"%lld",a*b);
        }
    } else {
        if (!strcmp(argv[i],"sub")){
            fprintf(stdout,"%lld",((a%c)-(b%c)+c)%c);
        }
        if (!strcmp(argv[i],"add")){
            long long ans=((a%c)+(b%c))%c;
            fprintf(stdout,"%lld",ans>=0?ans:c+ans);
        }
        if (!strcmp(argv[i],"mul")){
            long long ans =((a%c)*(b%c))%c;
            fprintf(stdout,"%lld",ans>=0?ans:c+ans);
        }
    }
    return 0;
}

2)
#include <stdio.h>
void nodext (long long a, long long b,long long *x,long long *y,long long *gcd){
    if (!a){
        (*x)=0;(*y)=1;(*gcd)=b;
        return;
    }
    long long x1=0, y1=0, res=0;
    nodext (b%a, a,&x1,&y1,&res);
    (*x) = y1 - (b / a) * x1;
    (*y) = x1;
}
int main() {
    FILE *filein = fopen("input.txt","rt");
    FILE *fileout =fopen("output.txt","wt");
    int request;long long mod;
    fscanf(filein,"%d %lld",&request,&mod);
    for (int i = 0; i < request; ++i) {
        long long a=0,ans=0,k1=0,k2=0;
        fscanf(filein,"%lld",&a);
        nodext(a,mod,&k1,&k2,&ans);
        k1=k1<0?k1+mod:k1;
        k1=(a*k1)%mod==1?k1:-1; //opt 2
        fprintf(fileout,"%lld\n",k1);
    }
    fclose(filein);
    fclose(fileout);
    return 0;
}

3)
#include <stdio.h>
#include <string.h>
char string[102];
int bracket(int start,char *dest){
    int cur=start;
    while (string[cur]!='\"'){
        cur++;
    }strncpy(dest,&string[start],cur-start);
    return cur;
}
int space(int start,char *dest){
    int cur=start;
    while (string[cur] && string[cur]!=' ' &&string[cur]!='\n'){
        cur++;
    }strncpy(dest,&string[start],cur-start);
    return cur;
}
//ситуация когда не разделены пробелом?? мб убрать пров на сущ-е из функ скабки
int main() {
    FILE *filein = fopen("input.txt","rt");
    FILE *fileout =fopen("output.txt","wt");
    fgets(string,102,filein);
    int i=0;
    while (string[i] && string[i]!='\n'){
        if (string[i]=='\"'){
           char buff[102];
            i++;
           int len=bracket(i,buff);
           buff[len-i]=0;
            fprintf(fileout,"[%s]\n",buff);
            i=len+1;
            continue;
        } if (string[i]==' '){
            if (!string[i+1] || string[i+1]=='\n')break;
            if (string[i+1]=='\"' || string[i+1]==' '){
                i++;
            } else {
                char buff[102];
                i++;
                int len=space(i,buff);
                buff[len-i]=0;
                fprintf(fileout,"[%s]\n",buff);
                i=len;
            }
        } else {
            char buff[102];
            int len=space(i,buff);
            buff[len-i]=0;
            fprintf(fileout,"[%s]\n",buff);
            i=len;
        }
    }
    fclose(filein);
    fclose(fileout);
    return 0;
}

5)
#include <stdio.h>

int gcd(int a, int b) {
    return (b? gcd(b,a%b):a);
}


int main() {
    FILE *filein = fopen("input.txt", "rt");
    FILE *fileout = fopen("output.txt", "wt");
    int request;
    fscanf(filein,"%d",&request);
    for (int i = 0; i < request; ++i) {
        int num1,num2;
        fscanf(filein,"%d %d",&num1,&num2);
        fprintf(fileout,"%d\n",gcd(num1,num2));
    }
    fclose(filein);
    fclose(fileout);
    return 0;
}